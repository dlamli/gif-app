{"version":3,"sources":["components/AddCategory/AddCategory.js","helpers/getGif.js","components/GifGridItem/GifGridItem.js","components/GifGrid/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GiftExpertApp","rootDiv","document","getElementById","ReactDOM","render"],"mappings":"qLAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACG,sBAAMC,SAVY,SAACC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC5CN,EAAc,MAKjB,SACG,uBACGO,KAAK,OACLC,MAAOT,EACPU,SAnBiB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCNhBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,YAAK,CAC3BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARjB,kBAWbM,GAXa,4CAAH,sDCAPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEtC,OACG,sBAAKc,UAAU,yBAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCqBEO,EAxBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEhB,ECHyB,SAACA,GAE1B,MAA0Bd,mBAAS,CAChCqB,KAAM,GACNa,SAAS,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACPxB,EAAQC,GACJwB,MAAK,SAAAC,GACHC,YAAW,WACRJ,EAAS,CACNf,KAAMkB,EACNL,SAAS,MAEZ,WAET,CAACpB,IAEGqB,EDhB2BM,CAAa3B,GAAjCa,EAAd,EAAQN,KAAca,EAAtB,EAAsBA,QAEtB,OACG,qCACG,oBAAIJ,UAAU,wBAAd,SAAwChB,IAEvCoB,GAAW,mBAAGJ,UAAU,8BAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAEMH,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEOA,GADCA,EAAIC,aEefiB,EA5BO,WAEnB,MAAoC1C,mBAAS,CAAC,aAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACG,qCACG,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEMS,EAAWe,KAAI,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEGA,SAAUA,GADLA,YCZpB6B,G,YAAUC,SAASC,eAAe,SAExCC,IAASC,OAAO,cAAC,EAAD,IAAmBJ,K","file":"static/js/main.effbdabe.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n   const [inputValue, setinputValue] = useState('');\r\n\r\n   const handleInputChange = (e) => {\r\n      setinputValue(e.target.value);\r\n   }\r\n\r\n\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      if (inputValue.trim().length > 2) {\r\n         setCategories(categories => [inputValue, ...categories]);\r\n         setinputValue('');\r\n      }\r\n   }\r\n\r\n   return (\r\n      <form onSubmit={handleSubmit}>\r\n         <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n         />\r\n      </form>\r\n   )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n   setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async (category) => {\r\n   const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=cinrpUcQOHbVg8HknLmkWN2i1cgJTFS0`;\r\n   const resp = await fetch(url);\r\n   const { data } = await resp.json();\r\n\r\n   const gifs = data.map(img => ({\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n   }))\r\n\r\n   return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n   return (\r\n      <div className=\"card animate__bounceIn\">\r\n         <img src={url} alt={title} />\r\n         <p>{title}</p>\r\n      </div>\r\n   )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../../hooks/useFetchGifs';\r\nimport { GifGridItem } from '../GifGridItem/GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n   const { data: images, loading } = useFetchGifs(category);\r\n\r\n   return (\r\n      <>\r\n         <h3 className=\"animate__bounceInDown\" >{category}</h3>\r\n\r\n         {loading && <p className=\"animate__lightSpeedOutRight\" >Loading...</p>}\r\n\r\n         <div className=\"card-grid\" >\r\n            {\r\n               images.map(img => (\r\n                  <GifGridItem\r\n                     key={img.id}\r\n                     {...img}\r\n                  />\r\n               ))\r\n            }\r\n         </div >\r\n      </>\r\n   )\r\n}\r\n\r\nexport default GifGrid;","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGif';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n   const [state, setState] = useState({\r\n      data: [],\r\n      loading: true\r\n   });\r\n\r\n   useEffect(() => {\r\n      getGifs(category)\r\n         .then(imgs => {\r\n            setTimeout(() => {\r\n               setState({\r\n                  data: imgs,\r\n                  loading: false\r\n               });\r\n            }, 1500);\r\n         })\r\n   }, [category]);\r\n\r\n   return state;\r\n}","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid/GifGrid\";\r\n\r\n\r\nconst GiftExpertApp = () => {\r\n\r\n   const [categories, setCategories] = useState(['Chillhop']);\r\n\r\n   return (\r\n      <>\r\n         <h2>GifExpertApp</h2>\r\n         <AddCategory setCategories={setCategories} />\r\n         <hr />\r\n\r\n         <ol>\r\n            {\r\n               categories.map(category => (\r\n                  <GifGrid\r\n                     key={category}\r\n                     category={category}\r\n                  />\r\n               ))\r\n            }\r\n         </ol>\r\n      </>\r\n   );\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GifExpertApp';\n\nimport './index.css';\nimport 'animate.css';\n\nconst rootDiv = document.getElementById('root');\n\nReactDOM.render(<GiftExpertApp />, rootDiv);\n\n\n\n"],"sourceRoot":""}